eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.instance.preferIpAddress=true
server.port = 8090
spring.application.name= hms-client-service
#spring.cloud.config.uri=http://localhost:8888

resilience4j.circuitbreaker.instances.login.register-health-indicator=true
resilience4j.circuitbreaker.instances.login.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.login.automaticTransitionFromOpenToHalfOpenEnabled: true
#it shows the percentage of the total sliding-window-size fails and will cause the circuit breaker trips or open
resilience4j.circuitbreaker.instances.login.failureRateThreshold: 50

resilience4j.circuitbreaker.instances.login.minimumNumberOfCalls: 1
resilience4j.circuitbreaker.instances.login.permittedNumberOfCallsInHalfOpenState: 3
#to record last N requests to make the circuit breaker trip or open
resilience4j.circuitbreaker.instances.login.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.login.waitDurationInOpenState: 2s
#count based : the circuit breaker switches from the closed state to an open state when the last N requests have failed or timedout
#Time-based : the circuit breaker switches from a closed state to an open state when last N times unit has failed or timeout
resilience4j.circuitbreaker.instances.login.slidingWindowType: COUNT_BASED




resilience4j.circuitbreaker.instances.patient.register-health-indicator=true
resilience4j.circuitbreaker.instances.patient.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.patient.automaticTransitionFromOpenToHalfOpenEnabled: true
#it shows the percentage of the total sliding-window-size fails and will cause the circuit breaker trips or open
resilience4j.circuitbreaker.instances.patient.failureRateThreshold: 50

resilience4j.circuitbreaker.instances.patient.minimumNumberOfCalls: 1
resilience4j.circuitbreaker.instances.patient.permittedNumberOfCallsInHalfOpenState: 3
#to record last N requests to make the circuit breaker trip or open
resilience4j.circuitbreaker.instances.patient.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.patient.waitDurationInOpenState: 2s
#count based : the circuit breaker switches from the closed state to an open state when the last N requests have failed or timedout
#Time-based : the circuit breaker switches from a closed state to an open state when last N times unit has failed or timeout
resilience4j.circuitbreaker.instances.patient.slidingWindowType: COUNT_BASED




resilience4j.circuitbreaker.instances.doctor.register-health-indicator=true
resilience4j.circuitbreaker.instances.doctor.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.doctor.automaticTransitionFromOpenToHalfOpenEnabled: true
#it shows the percentage of the total sliding-window-size fails and will cause the circuit breaker trips or open
resilience4j.circuitbreaker.instances.doctor.failureRateThreshold: 50

resilience4j.circuitbreaker.instances.doctor.minimumNumberOfCalls: 1
resilience4j.circuitbreaker.instances.doctor.permittedNumberOfCallsInHalfOpenState: 3
#to record last N requests to make the circuit breaker trip or open
resilience4j.circuitbreaker.instances.doctor.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.doctor.waitDurationInOpenState: 2s
#count based : the circuit breaker switches from the closed state to an open state when the last N requests have failed or timedout
#Time-based : the circuit breaker switches from a closed state to an open state when last N times unit has failed or timeout
resilience4j.circuitbreaker.instances.doctor.slidingWindowType: COUNT_BASED




resilience4j.circuitbreaker.instances.schedule.register-health-indicator=true
resilience4j.circuitbreaker.instances.schedule.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.schedule.automaticTransitionFromOpenToHalfOpenEnabled: true
#it shows the percentage of the total sliding-window-size fails and will cause the circuit breaker trips or open
resilience4j.circuitbreaker.instances.schedule.failureRateThreshold: 50

resilience4j.circuitbreaker.instances.schedule.minimumNumberOfCalls: 1
resilience4j.circuitbreaker.instances.schedule.permittedNumberOfCallsInHalfOpenState: 3
#to record last N requests to make the circuit breaker trip or open
resilience4j.circuitbreaker.instances.schedule.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.schedule.waitDurationInOpenState: 2s
#count based : the circuit breaker switches from the closed state to an open state when the last N requests have failed or timedout
#Time-based : the circuit breaker switches from a closed state to an open state when last N times unit has failed or timeout
resilience4j.circuitbreaker.instances.schedule.slidingWindowType: COUNT_BASED




resilience4j.circuitbreaker.instances.appopintments.register-health-indicator=true
resilience4j.circuitbreaker.instances.appopintments.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.appopintments.automaticTransitionFromOpenToHalfOpenEnabled: true
#it shows the percentage of the total sliding-window-size fails and will cause the circuit breaker trips or open
resilience4j.circuitbreaker.instances.appopintments.failureRateThreshold: 50

resilience4j.circuitbreaker.instances.appopintments.minimumNumberOfCalls: 1
resilience4j.circuitbreaker.instances.appopintments.permittedNumberOfCallsInHalfOpenState: 3
#to record last N requests to make the circuit breaker trip or open
resilience4j.circuitbreaker.instances.appopintments.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.appopintments.waitDurationInOpenState: 2s
#count based : the circuit breaker switches from the closed state to an open state when the last N requests have failed or timedout
#Time-based : the circuit breaker switches from a closed state to an open state when last N times unit has failed or timeout
resilience4j.circuitbreaker.instances.appopintments.slidingWindowType: COUNT_BASED





